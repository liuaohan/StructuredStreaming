// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

package rpc;

/**
 * <pre>
 * DAG中的一个算子
 * </pre>
 *
 * Protobuf type {@code rpc.Node}
 */
public final class Node extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:rpc.Node)
    NodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Node.newBuilder() to construct.
  private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Node() {
    type_ = 0;
    name_ = "";
    preNodeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    parameterList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    outputList_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Node();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Node(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              preNodeList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            preNodeList_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              parameterList_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            parameterList_.add(s);
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              outputList_ = new java.util.ArrayList<rpc.Attribute>();
              mutable_bitField0_ |= 0x00000004;
            }
            outputList_.add(
                input.readMessage(rpc.Attribute.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        preNodeList_ = preNodeList_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        parameterList_ = parameterList_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        outputList_ = java.util.Collections.unmodifiableList(outputList_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return rpc.SparkGProto.internal_static_rpc_Node_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return rpc.SparkGProto.internal_static_rpc_Node_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            rpc.Node.class, rpc.Node.Builder.class);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_;
  /**
   * <pre>
   * 算子类型
   * </pre>
   *
   * <code>.rpc.NodeType type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * 算子类型
   * </pre>
   *
   * <code>.rpc.NodeType type = 1;</code>
   * @return The type.
   */
  @java.lang.Override public rpc.NodeType getType() {
    @SuppressWarnings("deprecation")
    rpc.NodeType result = rpc.NodeType.valueOf(type_);
    return result == null ? rpc.NodeType.UNRECOGNIZED : result;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * 算子名称
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 算子名称
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRE_NODE_LIST_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList preNodeList_;
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @return A list containing the preNodeList.
   */
  public com.google.protobuf.ProtocolStringList
      getPreNodeListList() {
    return preNodeList_;
  }
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @return The count of preNodeList.
   */
  public int getPreNodeListCount() {
    return preNodeList_.size();
  }
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @param index The index of the element to return.
   * @return The preNodeList at the given index.
   */
  public java.lang.String getPreNodeList(int index) {
    return preNodeList_.get(index);
  }
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the preNodeList at the given index.
   */
  public com.google.protobuf.ByteString
      getPreNodeListBytes(int index) {
    return preNodeList_.getByteString(index);
  }

  public static final int PARAMETER_LIST_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList parameterList_;
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @return A list containing the parameterList.
   */
  public com.google.protobuf.ProtocolStringList
      getParameterListList() {
    return parameterList_;
  }
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @return The count of parameterList.
   */
  public int getParameterListCount() {
    return parameterList_.size();
  }
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @param index The index of the element to return.
   * @return The parameterList at the given index.
   */
  public java.lang.String getParameterList(int index) {
    return parameterList_.get(index);
  }
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the parameterList at the given index.
   */
  public com.google.protobuf.ByteString
      getParameterListBytes(int index) {
    return parameterList_.getByteString(index);
  }

  public static final int OUTPUT_LIST_FIELD_NUMBER = 5;
  private java.util.List<rpc.Attribute> outputList_;
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  @java.lang.Override
  public java.util.List<rpc.Attribute> getOutputListList() {
    return outputList_;
  }
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends rpc.AttributeOrBuilder> 
      getOutputListOrBuilderList() {
    return outputList_;
  }
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  @java.lang.Override
  public int getOutputListCount() {
    return outputList_.size();
  }
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  @java.lang.Override
  public rpc.Attribute getOutputList(int index) {
    return outputList_.get(index);
  }
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  @java.lang.Override
  public rpc.AttributeOrBuilder getOutputListOrBuilder(
      int index) {
    return outputList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != rpc.NodeType.Reader.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    for (int i = 0; i < preNodeList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, preNodeList_.getRaw(i));
    }
    for (int i = 0; i < parameterList_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, parameterList_.getRaw(i));
    }
    for (int i = 0; i < outputList_.size(); i++) {
      output.writeMessage(5, outputList_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != rpc.NodeType.Reader.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < preNodeList_.size(); i++) {
        dataSize += computeStringSizeNoTag(preNodeList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPreNodeListList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < parameterList_.size(); i++) {
        dataSize += computeStringSizeNoTag(parameterList_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getParameterListList().size();
    }
    for (int i = 0; i < outputList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, outputList_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof rpc.Node)) {
      return super.equals(obj);
    }
    rpc.Node other = (rpc.Node) obj;

    if (type_ != other.type_) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getPreNodeListList()
        .equals(other.getPreNodeListList())) return false;
    if (!getParameterListList()
        .equals(other.getParameterListList())) return false;
    if (!getOutputListList()
        .equals(other.getOutputListList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getPreNodeListCount() > 0) {
      hash = (37 * hash) + PRE_NODE_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getPreNodeListList().hashCode();
    }
    if (getParameterListCount() > 0) {
      hash = (37 * hash) + PARAMETER_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getParameterListList().hashCode();
    }
    if (getOutputListCount() > 0) {
      hash = (37 * hash) + OUTPUT_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getOutputListList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static rpc.Node parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static rpc.Node parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static rpc.Node parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static rpc.Node parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static rpc.Node parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static rpc.Node parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static rpc.Node parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static rpc.Node parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static rpc.Node parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static rpc.Node parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static rpc.Node parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static rpc.Node parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(rpc.Node prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * DAG中的一个算子
   * </pre>
   *
   * Protobuf type {@code rpc.Node}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:rpc.Node)
      rpc.NodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.SparkGProto.internal_static_rpc_Node_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.SparkGProto.internal_static_rpc_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.Node.class, rpc.Node.Builder.class);
    }

    // Construct using rpc.Node.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getOutputListFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = 0;

      name_ = "";

      preNodeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      parameterList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (outputListBuilder_ == null) {
        outputList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        outputListBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return rpc.SparkGProto.internal_static_rpc_Node_descriptor;
    }

    @java.lang.Override
    public rpc.Node getDefaultInstanceForType() {
      return rpc.Node.getDefaultInstance();
    }

    @java.lang.Override
    public rpc.Node build() {
      rpc.Node result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public rpc.Node buildPartial() {
      rpc.Node result = new rpc.Node(this);
      int from_bitField0_ = bitField0_;
      result.type_ = type_;
      result.name_ = name_;
      if (((bitField0_ & 0x00000001) != 0)) {
        preNodeList_ = preNodeList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.preNodeList_ = preNodeList_;
      if (((bitField0_ & 0x00000002) != 0)) {
        parameterList_ = parameterList_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.parameterList_ = parameterList_;
      if (outputListBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          outputList_ = java.util.Collections.unmodifiableList(outputList_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.outputList_ = outputList_;
      } else {
        result.outputList_ = outputListBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof rpc.Node) {
        return mergeFrom((rpc.Node)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(rpc.Node other) {
      if (other == rpc.Node.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.preNodeList_.isEmpty()) {
        if (preNodeList_.isEmpty()) {
          preNodeList_ = other.preNodeList_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensurePreNodeListIsMutable();
          preNodeList_.addAll(other.preNodeList_);
        }
        onChanged();
      }
      if (!other.parameterList_.isEmpty()) {
        if (parameterList_.isEmpty()) {
          parameterList_ = other.parameterList_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureParameterListIsMutable();
          parameterList_.addAll(other.parameterList_);
        }
        onChanged();
      }
      if (outputListBuilder_ == null) {
        if (!other.outputList_.isEmpty()) {
          if (outputList_.isEmpty()) {
            outputList_ = other.outputList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOutputListIsMutable();
            outputList_.addAll(other.outputList_);
          }
          onChanged();
        }
      } else {
        if (!other.outputList_.isEmpty()) {
          if (outputListBuilder_.isEmpty()) {
            outputListBuilder_.dispose();
            outputListBuilder_ = null;
            outputList_ = other.outputList_;
            bitField0_ = (bitField0_ & ~0x00000004);
            outputListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOutputListFieldBuilder() : null;
          } else {
            outputListBuilder_.addAllMessages(other.outputList_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      rpc.Node parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (rpc.Node) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * 算子类型
     * </pre>
     *
     * <code>.rpc.NodeType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 算子类型
     * </pre>
     *
     * <code>.rpc.NodeType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 算子类型
     * </pre>
     *
     * <code>.rpc.NodeType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public rpc.NodeType getType() {
      @SuppressWarnings("deprecation")
      rpc.NodeType result = rpc.NodeType.valueOf(type_);
      return result == null ? rpc.NodeType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 算子类型
     * </pre>
     *
     * <code>.rpc.NodeType type = 1;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(rpc.NodeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 算子类型
     * </pre>
     *
     * <code>.rpc.NodeType type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * 算子名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 算子名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 算子名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 算子名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 算子名称
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList preNodeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensurePreNodeListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        preNodeList_ = new com.google.protobuf.LazyStringArrayList(preNodeList_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @return A list containing the preNodeList.
     */
    public com.google.protobuf.ProtocolStringList
        getPreNodeListList() {
      return preNodeList_.getUnmodifiableView();
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @return The count of preNodeList.
     */
    public int getPreNodeListCount() {
      return preNodeList_.size();
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @param index The index of the element to return.
     * @return The preNodeList at the given index.
     */
    public java.lang.String getPreNodeList(int index) {
      return preNodeList_.get(index);
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the preNodeList at the given index.
     */
    public com.google.protobuf.ByteString
        getPreNodeListBytes(int index) {
      return preNodeList_.getByteString(index);
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @param index The index to set the value at.
     * @param value The preNodeList to set.
     * @return This builder for chaining.
     */
    public Builder setPreNodeList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePreNodeListIsMutable();
      preNodeList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @param value The preNodeList to add.
     * @return This builder for chaining.
     */
    public Builder addPreNodeList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePreNodeListIsMutable();
      preNodeList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @param values The preNodeList to add.
     * @return This builder for chaining.
     */
    public Builder addAllPreNodeList(
        java.lang.Iterable<java.lang.String> values) {
      ensurePreNodeListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, preNodeList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreNodeList() {
      preNodeList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子依赖的前驱节点名称列表
     * </pre>
     *
     * <code>repeated string pre_node_list = 3;</code>
     * @param value The bytes of the preNodeList to add.
     * @return This builder for chaining.
     */
    public Builder addPreNodeListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensurePreNodeListIsMutable();
      preNodeList_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList parameterList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureParameterListIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        parameterList_ = new com.google.protobuf.LazyStringArrayList(parameterList_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @return A list containing the parameterList.
     */
    public com.google.protobuf.ProtocolStringList
        getParameterListList() {
      return parameterList_.getUnmodifiableView();
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @return The count of parameterList.
     */
    public int getParameterListCount() {
      return parameterList_.size();
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @param index The index of the element to return.
     * @return The parameterList at the given index.
     */
    public java.lang.String getParameterList(int index) {
      return parameterList_.get(index);
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the parameterList at the given index.
     */
    public com.google.protobuf.ByteString
        getParameterListBytes(int index) {
      return parameterList_.getByteString(index);
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @param index The index to set the value at.
     * @param value The parameterList to set.
     * @return This builder for chaining.
     */
    public Builder setParameterList(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureParameterListIsMutable();
      parameterList_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @param value The parameterList to add.
     * @return This builder for chaining.
     */
    public Builder addParameterList(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureParameterListIsMutable();
      parameterList_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @param values The parameterList to add.
     * @return This builder for chaining.
     */
    public Builder addAllParameterList(
        java.lang.Iterable<java.lang.String> values) {
      ensureParameterListIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, parameterList_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearParameterList() {
      parameterList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 该算子的参数列表
     * </pre>
     *
     * <code>repeated string parameter_list = 4;</code>
     * @param value The bytes of the parameterList to add.
     * @return This builder for chaining.
     */
    public Builder addParameterListBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureParameterListIsMutable();
      parameterList_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<rpc.Attribute> outputList_ =
      java.util.Collections.emptyList();
    private void ensureOutputListIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        outputList_ = new java.util.ArrayList<rpc.Attribute>(outputList_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        rpc.Attribute, rpc.Attribute.Builder, rpc.AttributeOrBuilder> outputListBuilder_;

    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public java.util.List<rpc.Attribute> getOutputListList() {
      if (outputListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(outputList_);
      } else {
        return outputListBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public int getOutputListCount() {
      if (outputListBuilder_ == null) {
        return outputList_.size();
      } else {
        return outputListBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public rpc.Attribute getOutputList(int index) {
      if (outputListBuilder_ == null) {
        return outputList_.get(index);
      } else {
        return outputListBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder setOutputList(
        int index, rpc.Attribute value) {
      if (outputListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputListIsMutable();
        outputList_.set(index, value);
        onChanged();
      } else {
        outputListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder setOutputList(
        int index, rpc.Attribute.Builder builderForValue) {
      if (outputListBuilder_ == null) {
        ensureOutputListIsMutable();
        outputList_.set(index, builderForValue.build());
        onChanged();
      } else {
        outputListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder addOutputList(rpc.Attribute value) {
      if (outputListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputListIsMutable();
        outputList_.add(value);
        onChanged();
      } else {
        outputListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder addOutputList(
        int index, rpc.Attribute value) {
      if (outputListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputListIsMutable();
        outputList_.add(index, value);
        onChanged();
      } else {
        outputListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder addOutputList(
        rpc.Attribute.Builder builderForValue) {
      if (outputListBuilder_ == null) {
        ensureOutputListIsMutable();
        outputList_.add(builderForValue.build());
        onChanged();
      } else {
        outputListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder addOutputList(
        int index, rpc.Attribute.Builder builderForValue) {
      if (outputListBuilder_ == null) {
        ensureOutputListIsMutable();
        outputList_.add(index, builderForValue.build());
        onChanged();
      } else {
        outputListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder addAllOutputList(
        java.lang.Iterable<? extends rpc.Attribute> values) {
      if (outputListBuilder_ == null) {
        ensureOutputListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputList_);
        onChanged();
      } else {
        outputListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder clearOutputList() {
      if (outputListBuilder_ == null) {
        outputList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        outputListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public Builder removeOutputList(int index) {
      if (outputListBuilder_ == null) {
        ensureOutputListIsMutable();
        outputList_.remove(index);
        onChanged();
      } else {
        outputListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public rpc.Attribute.Builder getOutputListBuilder(
        int index) {
      return getOutputListFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public rpc.AttributeOrBuilder getOutputListOrBuilder(
        int index) {
      if (outputListBuilder_ == null) {
        return outputList_.get(index);  } else {
        return outputListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public java.util.List<? extends rpc.AttributeOrBuilder> 
         getOutputListOrBuilderList() {
      if (outputListBuilder_ != null) {
        return outputListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(outputList_);
      }
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public rpc.Attribute.Builder addOutputListBuilder() {
      return getOutputListFieldBuilder().addBuilder(
          rpc.Attribute.getDefaultInstance());
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public rpc.Attribute.Builder addOutputListBuilder(
        int index) {
      return getOutputListFieldBuilder().addBuilder(
          index, rpc.Attribute.getDefaultInstance());
    }
    /**
     * <pre>
     * 该算子的输出属性列表
     * </pre>
     *
     * <code>repeated .rpc.Attribute output_list = 5;</code>
     */
    public java.util.List<rpc.Attribute.Builder> 
         getOutputListBuilderList() {
      return getOutputListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        rpc.Attribute, rpc.Attribute.Builder, rpc.AttributeOrBuilder> 
        getOutputListFieldBuilder() {
      if (outputListBuilder_ == null) {
        outputListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            rpc.Attribute, rpc.Attribute.Builder, rpc.AttributeOrBuilder>(
                outputList_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        outputList_ = null;
      }
      return outputListBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:rpc.Node)
  }

  // @@protoc_insertion_point(class_scope:rpc.Node)
  private static final rpc.Node DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new rpc.Node();
  }

  public static rpc.Node getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Node>
      PARSER = new com.google.protobuf.AbstractParser<Node>() {
    @java.lang.Override
    public Node parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Node(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Node> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Node> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public rpc.Node getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

