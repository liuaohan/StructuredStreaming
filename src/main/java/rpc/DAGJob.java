// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

package rpc;

/**
 * <pre>
 * 一个DAG图作为一个job执行
 * </pre>
 *
 * Protobuf type {@code rpc.DAGJob}
 */
public final class DAGJob extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:rpc.DAGJob)
    DAGJobOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DAGJob.newBuilder() to construct.
  private DAGJob(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DAGJob() {
    name_ = "";
    allNodeList_ = java.util.Collections.emptyList();
    platform_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DAGJob();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DAGJob(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              allNodeList_ = new java.util.ArrayList<rpc.Node>();
              mutable_bitField0_ |= 0x00000001;
            }
            allNodeList_.add(
                input.readMessage(rpc.Node.parser(), extensionRegistry));
            break;
          }
          case 24: {

            isStream_ = input.readBool();
            break;
          }
          case 37: {

            latency_ = input.readFloat();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            platform_ = rawValue;
            break;
          }
          case 48: {

            useCheckpoint_ = input.readBool();
            break;
          }
          case 56: {

            isTest_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        allNodeList_ = java.util.Collections.unmodifiableList(allNodeList_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return rpc.SparkGProto.internal_static_rpc_DAGJob_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return rpc.SparkGProto.internal_static_rpc_DAGJob_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            rpc.DAGJob.class, rpc.DAGJob.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ALL_NODE_LIST_FIELD_NUMBER = 2;
  private java.util.List<rpc.Node> allNodeList_;
  /**
   * <code>repeated .rpc.Node all_node_list = 2;</code>
   */
  @java.lang.Override
  public java.util.List<rpc.Node> getAllNodeListList() {
    return allNodeList_;
  }
  /**
   * <code>repeated .rpc.Node all_node_list = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends rpc.NodeOrBuilder> 
      getAllNodeListOrBuilderList() {
    return allNodeList_;
  }
  /**
   * <code>repeated .rpc.Node all_node_list = 2;</code>
   */
  @java.lang.Override
  public int getAllNodeListCount() {
    return allNodeList_.size();
  }
  /**
   * <code>repeated .rpc.Node all_node_list = 2;</code>
   */
  @java.lang.Override
  public rpc.Node getAllNodeList(int index) {
    return allNodeList_.get(index);
  }
  /**
   * <code>repeated .rpc.Node all_node_list = 2;</code>
   */
  @java.lang.Override
  public rpc.NodeOrBuilder getAllNodeListOrBuilder(
      int index) {
    return allNodeList_.get(index);
  }

  public static final int IS_STREAM_FIELD_NUMBER = 3;
  private boolean isStream_;
  /**
   * <pre>
   * 执行模式："batch" or "stream"
   * </pre>
   *
   * <code>bool is_stream = 3;</code>
   * @return The isStream.
   */
  @java.lang.Override
  public boolean getIsStream() {
    return isStream_;
  }

  public static final int LATENCY_FIELD_NUMBER = 4;
  private float latency_;
  /**
   * <pre>
   * stream模式的执行延时，如1s
   * </pre>
   *
   * <code>float latency = 4;</code>
   * @return The latency.
   */
  @java.lang.Override
  public float getLatency() {
    return latency_;
  }

  public static final int PLATFORM_FIELD_NUMBER = 5;
  private int platform_;
  /**
   * <pre>
   * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
   * </pre>
   *
   * <code>.rpc.PlatformType platform = 5;</code>
   * @return The enum numeric value on the wire for platform.
   */
  @java.lang.Override public int getPlatformValue() {
    return platform_;
  }
  /**
   * <pre>
   * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
   * </pre>
   *
   * <code>.rpc.PlatformType platform = 5;</code>
   * @return The platform.
   */
  @java.lang.Override public rpc.PlatformType getPlatform() {
    @SuppressWarnings("deprecation")
    rpc.PlatformType result = rpc.PlatformType.valueOf(platform_);
    return result == null ? rpc.PlatformType.UNRECOGNIZED : result;
  }

  public static final int USE_CHECKPOINT_FIELD_NUMBER = 6;
  private boolean useCheckpoint_;
  /**
   * <pre>
   * 是否需要容错
   * </pre>
   *
   * <code>bool use_checkpoint = 6;</code>
   * @return The useCheckpoint.
   */
  @java.lang.Override
  public boolean getUseCheckpoint() {
    return useCheckpoint_;
  }

  public static final int IS_TEST_FIELD_NUMBER = 7;
  private boolean isTest_;
  /**
   * <pre>
   * 是否启用测试模式
   * </pre>
   *
   * <code>bool is_test = 7;</code>
   * @return The isTest.
   */
  @java.lang.Override
  public boolean getIsTest() {
    return isTest_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    for (int i = 0; i < allNodeList_.size(); i++) {
      output.writeMessage(2, allNodeList_.get(i));
    }
    if (isStream_ != false) {
      output.writeBool(3, isStream_);
    }
    if (latency_ != 0F) {
      output.writeFloat(4, latency_);
    }
    if (platform_ != rpc.PlatformType.Local.getNumber()) {
      output.writeEnum(5, platform_);
    }
    if (useCheckpoint_ != false) {
      output.writeBool(6, useCheckpoint_);
    }
    if (isTest_ != false) {
      output.writeBool(7, isTest_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    for (int i = 0; i < allNodeList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, allNodeList_.get(i));
    }
    if (isStream_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, isStream_);
    }
    if (latency_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, latency_);
    }
    if (platform_ != rpc.PlatformType.Local.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, platform_);
    }
    if (useCheckpoint_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, useCheckpoint_);
    }
    if (isTest_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, isTest_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof rpc.DAGJob)) {
      return super.equals(obj);
    }
    rpc.DAGJob other = (rpc.DAGJob) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getAllNodeListList()
        .equals(other.getAllNodeListList())) return false;
    if (getIsStream()
        != other.getIsStream()) return false;
    if (java.lang.Float.floatToIntBits(getLatency())
        != java.lang.Float.floatToIntBits(
            other.getLatency())) return false;
    if (platform_ != other.platform_) return false;
    if (getUseCheckpoint()
        != other.getUseCheckpoint()) return false;
    if (getIsTest()
        != other.getIsTest()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (getAllNodeListCount() > 0) {
      hash = (37 * hash) + ALL_NODE_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getAllNodeListList().hashCode();
    }
    hash = (37 * hash) + IS_STREAM_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsStream());
    hash = (37 * hash) + LATENCY_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getLatency());
    hash = (37 * hash) + PLATFORM_FIELD_NUMBER;
    hash = (53 * hash) + platform_;
    hash = (37 * hash) + USE_CHECKPOINT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getUseCheckpoint());
    hash = (37 * hash) + IS_TEST_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsTest());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static rpc.DAGJob parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static rpc.DAGJob parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static rpc.DAGJob parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static rpc.DAGJob parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static rpc.DAGJob parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static rpc.DAGJob parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static rpc.DAGJob parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static rpc.DAGJob parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static rpc.DAGJob parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static rpc.DAGJob parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static rpc.DAGJob parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static rpc.DAGJob parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(rpc.DAGJob prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 一个DAG图作为一个job执行
   * </pre>
   *
   * Protobuf type {@code rpc.DAGJob}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:rpc.DAGJob)
      rpc.DAGJobOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rpc.SparkGProto.internal_static_rpc_DAGJob_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rpc.SparkGProto.internal_static_rpc_DAGJob_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rpc.DAGJob.class, rpc.DAGJob.Builder.class);
    }

    // Construct using rpc.DAGJob.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAllNodeListFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (allNodeListBuilder_ == null) {
        allNodeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        allNodeListBuilder_.clear();
      }
      isStream_ = false;

      latency_ = 0F;

      platform_ = 0;

      useCheckpoint_ = false;

      isTest_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return rpc.SparkGProto.internal_static_rpc_DAGJob_descriptor;
    }

    @java.lang.Override
    public rpc.DAGJob getDefaultInstanceForType() {
      return rpc.DAGJob.getDefaultInstance();
    }

    @java.lang.Override
    public rpc.DAGJob build() {
      rpc.DAGJob result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public rpc.DAGJob buildPartial() {
      rpc.DAGJob result = new rpc.DAGJob(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      if (allNodeListBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          allNodeList_ = java.util.Collections.unmodifiableList(allNodeList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.allNodeList_ = allNodeList_;
      } else {
        result.allNodeList_ = allNodeListBuilder_.build();
      }
      result.isStream_ = isStream_;
      result.latency_ = latency_;
      result.platform_ = platform_;
      result.useCheckpoint_ = useCheckpoint_;
      result.isTest_ = isTest_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof rpc.DAGJob) {
        return mergeFrom((rpc.DAGJob)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(rpc.DAGJob other) {
      if (other == rpc.DAGJob.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (allNodeListBuilder_ == null) {
        if (!other.allNodeList_.isEmpty()) {
          if (allNodeList_.isEmpty()) {
            allNodeList_ = other.allNodeList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAllNodeListIsMutable();
            allNodeList_.addAll(other.allNodeList_);
          }
          onChanged();
        }
      } else {
        if (!other.allNodeList_.isEmpty()) {
          if (allNodeListBuilder_.isEmpty()) {
            allNodeListBuilder_.dispose();
            allNodeListBuilder_ = null;
            allNodeList_ = other.allNodeList_;
            bitField0_ = (bitField0_ & ~0x00000001);
            allNodeListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAllNodeListFieldBuilder() : null;
          } else {
            allNodeListBuilder_.addAllMessages(other.allNodeList_);
          }
        }
      }
      if (other.getIsStream() != false) {
        setIsStream(other.getIsStream());
      }
      if (other.getLatency() != 0F) {
        setLatency(other.getLatency());
      }
      if (other.platform_ != 0) {
        setPlatformValue(other.getPlatformValue());
      }
      if (other.getUseCheckpoint() != false) {
        setUseCheckpoint(other.getUseCheckpoint());
      }
      if (other.getIsTest() != false) {
        setIsTest(other.getIsTest());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      rpc.DAGJob parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (rpc.DAGJob) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.util.List<rpc.Node> allNodeList_ =
      java.util.Collections.emptyList();
    private void ensureAllNodeListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        allNodeList_ = new java.util.ArrayList<rpc.Node>(allNodeList_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        rpc.Node, rpc.Node.Builder, rpc.NodeOrBuilder> allNodeListBuilder_;

    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public java.util.List<rpc.Node> getAllNodeListList() {
      if (allNodeListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(allNodeList_);
      } else {
        return allNodeListBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public int getAllNodeListCount() {
      if (allNodeListBuilder_ == null) {
        return allNodeList_.size();
      } else {
        return allNodeListBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public rpc.Node getAllNodeList(int index) {
      if (allNodeListBuilder_ == null) {
        return allNodeList_.get(index);
      } else {
        return allNodeListBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder setAllNodeList(
        int index, rpc.Node value) {
      if (allNodeListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllNodeListIsMutable();
        allNodeList_.set(index, value);
        onChanged();
      } else {
        allNodeListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder setAllNodeList(
        int index, rpc.Node.Builder builderForValue) {
      if (allNodeListBuilder_ == null) {
        ensureAllNodeListIsMutable();
        allNodeList_.set(index, builderForValue.build());
        onChanged();
      } else {
        allNodeListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder addAllNodeList(rpc.Node value) {
      if (allNodeListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllNodeListIsMutable();
        allNodeList_.add(value);
        onChanged();
      } else {
        allNodeListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder addAllNodeList(
        int index, rpc.Node value) {
      if (allNodeListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAllNodeListIsMutable();
        allNodeList_.add(index, value);
        onChanged();
      } else {
        allNodeListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder addAllNodeList(
        rpc.Node.Builder builderForValue) {
      if (allNodeListBuilder_ == null) {
        ensureAllNodeListIsMutable();
        allNodeList_.add(builderForValue.build());
        onChanged();
      } else {
        allNodeListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder addAllNodeList(
        int index, rpc.Node.Builder builderForValue) {
      if (allNodeListBuilder_ == null) {
        ensureAllNodeListIsMutable();
        allNodeList_.add(index, builderForValue.build());
        onChanged();
      } else {
        allNodeListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder addAllAllNodeList(
        java.lang.Iterable<? extends rpc.Node> values) {
      if (allNodeListBuilder_ == null) {
        ensureAllNodeListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allNodeList_);
        onChanged();
      } else {
        allNodeListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder clearAllNodeList() {
      if (allNodeListBuilder_ == null) {
        allNodeList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        allNodeListBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public Builder removeAllNodeList(int index) {
      if (allNodeListBuilder_ == null) {
        ensureAllNodeListIsMutable();
        allNodeList_.remove(index);
        onChanged();
      } else {
        allNodeListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public rpc.Node.Builder getAllNodeListBuilder(
        int index) {
      return getAllNodeListFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public rpc.NodeOrBuilder getAllNodeListOrBuilder(
        int index) {
      if (allNodeListBuilder_ == null) {
        return allNodeList_.get(index);  } else {
        return allNodeListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public java.util.List<? extends rpc.NodeOrBuilder> 
         getAllNodeListOrBuilderList() {
      if (allNodeListBuilder_ != null) {
        return allNodeListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(allNodeList_);
      }
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public rpc.Node.Builder addAllNodeListBuilder() {
      return getAllNodeListFieldBuilder().addBuilder(
          rpc.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public rpc.Node.Builder addAllNodeListBuilder(
        int index) {
      return getAllNodeListFieldBuilder().addBuilder(
          index, rpc.Node.getDefaultInstance());
    }
    /**
     * <code>repeated .rpc.Node all_node_list = 2;</code>
     */
    public java.util.List<rpc.Node.Builder> 
         getAllNodeListBuilderList() {
      return getAllNodeListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        rpc.Node, rpc.Node.Builder, rpc.NodeOrBuilder> 
        getAllNodeListFieldBuilder() {
      if (allNodeListBuilder_ == null) {
        allNodeListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            rpc.Node, rpc.Node.Builder, rpc.NodeOrBuilder>(
                allNodeList_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        allNodeList_ = null;
      }
      return allNodeListBuilder_;
    }

    private boolean isStream_ ;
    /**
     * <pre>
     * 执行模式："batch" or "stream"
     * </pre>
     *
     * <code>bool is_stream = 3;</code>
     * @return The isStream.
     */
    @java.lang.Override
    public boolean getIsStream() {
      return isStream_;
    }
    /**
     * <pre>
     * 执行模式："batch" or "stream"
     * </pre>
     *
     * <code>bool is_stream = 3;</code>
     * @param value The isStream to set.
     * @return This builder for chaining.
     */
    public Builder setIsStream(boolean value) {
      
      isStream_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 执行模式："batch" or "stream"
     * </pre>
     *
     * <code>bool is_stream = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsStream() {
      
      isStream_ = false;
      onChanged();
      return this;
    }

    private float latency_ ;
    /**
     * <pre>
     * stream模式的执行延时，如1s
     * </pre>
     *
     * <code>float latency = 4;</code>
     * @return The latency.
     */
    @java.lang.Override
    public float getLatency() {
      return latency_;
    }
    /**
     * <pre>
     * stream模式的执行延时，如1s
     * </pre>
     *
     * <code>float latency = 4;</code>
     * @param value The latency to set.
     * @return This builder for chaining.
     */
    public Builder setLatency(float value) {
      
      latency_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * stream模式的执行延时，如1s
     * </pre>
     *
     * <code>float latency = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLatency() {
      
      latency_ = 0F;
      onChanged();
      return this;
    }

    private int platform_ = 0;
    /**
     * <pre>
     * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
     * </pre>
     *
     * <code>.rpc.PlatformType platform = 5;</code>
     * @return The enum numeric value on the wire for platform.
     */
    @java.lang.Override public int getPlatformValue() {
      return platform_;
    }
    /**
     * <pre>
     * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
     * </pre>
     *
     * <code>.rpc.PlatformType platform = 5;</code>
     * @param value The enum numeric value on the wire for platform to set.
     * @return This builder for chaining.
     */
    public Builder setPlatformValue(int value) {
      
      platform_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
     * </pre>
     *
     * <code>.rpc.PlatformType platform = 5;</code>
     * @return The platform.
     */
    @java.lang.Override
    public rpc.PlatformType getPlatform() {
      @SuppressWarnings("deprecation")
      rpc.PlatformType result = rpc.PlatformType.valueOf(platform_);
      return result == null ? rpc.PlatformType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
     * </pre>
     *
     * <code>.rpc.PlatformType platform = 5;</code>
     * @param value The platform to set.
     * @return This builder for chaining.
     */
    public Builder setPlatform(rpc.PlatformType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      platform_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 执行平台："Spark Local", "Spark Cluster", "HRM Cluster"
     * </pre>
     *
     * <code>.rpc.PlatformType platform = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlatform() {
      
      platform_ = 0;
      onChanged();
      return this;
    }

    private boolean useCheckpoint_ ;
    /**
     * <pre>
     * 是否需要容错
     * </pre>
     *
     * <code>bool use_checkpoint = 6;</code>
     * @return The useCheckpoint.
     */
    @java.lang.Override
    public boolean getUseCheckpoint() {
      return useCheckpoint_;
    }
    /**
     * <pre>
     * 是否需要容错
     * </pre>
     *
     * <code>bool use_checkpoint = 6;</code>
     * @param value The useCheckpoint to set.
     * @return This builder for chaining.
     */
    public Builder setUseCheckpoint(boolean value) {
      
      useCheckpoint_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否需要容错
     * </pre>
     *
     * <code>bool use_checkpoint = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearUseCheckpoint() {
      
      useCheckpoint_ = false;
      onChanged();
      return this;
    }

    private boolean isTest_ ;
    /**
     * <pre>
     * 是否启用测试模式
     * </pre>
     *
     * <code>bool is_test = 7;</code>
     * @return The isTest.
     */
    @java.lang.Override
    public boolean getIsTest() {
      return isTest_;
    }
    /**
     * <pre>
     * 是否启用测试模式
     * </pre>
     *
     * <code>bool is_test = 7;</code>
     * @param value The isTest to set.
     * @return This builder for chaining.
     */
    public Builder setIsTest(boolean value) {
      
      isTest_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否启用测试模式
     * </pre>
     *
     * <code>bool is_test = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsTest() {
      
      isTest_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:rpc.DAGJob)
  }

  // @@protoc_insertion_point(class_scope:rpc.DAGJob)
  private static final rpc.DAGJob DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new rpc.DAGJob();
  }

  public static rpc.DAGJob getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DAGJob>
      PARSER = new com.google.protobuf.AbstractParser<DAGJob>() {
    @java.lang.Override
    public DAGJob parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DAGJob(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DAGJob> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DAGJob> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public rpc.DAGJob getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

