// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services.proto

package rpc;

public interface NodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rpc.Node)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 算子类型
   * </pre>
   *
   * <code>.rpc.NodeType type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * 算子类型
   * </pre>
   *
   * <code>.rpc.NodeType type = 1;</code>
   * @return The type.
   */
  rpc.NodeType getType();

  /**
   * <pre>
   * 算子名称
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * 算子名称
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @return A list containing the preNodeList.
   */
  java.util.List<java.lang.String>
      getPreNodeListList();
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @return The count of preNodeList.
   */
  int getPreNodeListCount();
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @param index The index of the element to return.
   * @return The preNodeList at the given index.
   */
  java.lang.String getPreNodeList(int index);
  /**
   * <pre>
   * 该算子依赖的前驱节点名称列表
   * </pre>
   *
   * <code>repeated string pre_node_list = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the preNodeList at the given index.
   */
  com.google.protobuf.ByteString
      getPreNodeListBytes(int index);

  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @return A list containing the parameterList.
   */
  java.util.List<java.lang.String>
      getParameterListList();
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @return The count of parameterList.
   */
  int getParameterListCount();
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @param index The index of the element to return.
   * @return The parameterList at the given index.
   */
  java.lang.String getParameterList(int index);
  /**
   * <pre>
   * 该算子的参数列表
   * </pre>
   *
   * <code>repeated string parameter_list = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the parameterList at the given index.
   */
  com.google.protobuf.ByteString
      getParameterListBytes(int index);

  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  java.util.List<rpc.Attribute> 
      getOutputListList();
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  rpc.Attribute getOutputList(int index);
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  int getOutputListCount();
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  java.util.List<? extends rpc.AttributeOrBuilder> 
      getOutputListOrBuilderList();
  /**
   * <pre>
   * 该算子的输出属性列表
   * </pre>
   *
   * <code>repeated .rpc.Attribute output_list = 5;</code>
   */
  rpc.AttributeOrBuilder getOutputListOrBuilder(
      int index);
}
